package net.golovach.verification.ccs

import LTSLib._
import HMLLib._

object HMLLibDemo_ extends App {

  val $ = "coin".↑
  val ⊥ = Act - ($, τ)

  // exists: {τ,τ}-$-{τ,τ} ↶
  val α =
      ◇($){↶} ∨
      ◇($){◇(τ){↶}} ∨
      ◇($){◇(τ){◇(τ){↶}}} ∨
      ◇(τ){◇($){↶}} ∨
      ◇(τ){◇($){◇(τ){↶}}} ∨
      ◇(τ){◇($){◇(τ){◇(τ){↶}}}} ∨
      ◇(τ){◇(τ){◇($){↶}}} ∨
      ◇(τ){◇(τ){◇($){◇(τ){↶}}}} ∨
      ◇(τ){◇(τ){◇($){◇(τ){◇(τ){↶}}}}}

  // does not exist: {τ,τ}-⊥-$-{τ,τ}-⊥
  val β =
      ⬜(⊥){ff} ∧
      ⬜(τ){⬜(⊥){ff}} ∧
      ⬜(τ){⬜(τ){⬜(⊥){ff}}} ∧
      ⬜($){⬜(⊥){ff}} ∧
      ⬜($){⬜(τ){⬜(⊥){ff}}} ∧
      ⬜($){⬜(τ){⬜(τ){⬜(⊥){ff}}}} ∧
      ⬜(τ){⬜($){⬜(⊥){ff}}} ∧
      ⬜(τ){⬜($){⬜(τ){⬜(⊥){ff}}}} ∧
      ⬜(τ){⬜($){⬜(τ){⬜(τ){⬜(⊥){ff}}}}} ∧
      ⬜(τ){⬜(τ){⬜($){⬜(⊥){ff}}}} ∧
      ⬜(τ){⬜(τ){⬜($){⬜(τ){⬜(⊥){ff}}}}} ∧
      ⬜(τ){⬜(τ){⬜($){⬜(τ){⬜(τ){⬜(⊥){ff}}}}}}

  val φ = α ∧ β
}
